{"version":3,"sources":["images/card-logo.svg","images/icon-complete.svg","CardForm.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","CardForm","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","cardNumber","setCardNumber","_useState5","_useState6","month","setMonth","_useState7","_useState8","year","setYear","_useState9","_useState10","cvc","setCvc","_useState11","_useState12","errors","setErrors","_useState13","_useState14","success","setSuccess","_useState15","_useState16","isFormSubmitted","setIsFormSubmitted","React","createElement","className","concat","src","cardImage","alt","expiry","check","onClick","window","location","reload","onSubmit","e","preventDefault","newErrors","trim","expiryPattern","test","currentMonth","Date","getMonth","currentYear","getFullYear","enteredMonth","parseInt","enteredYear","Object","keys","length","validateForm","setTimeout","htmlFor","type","id","value","onChange","target","placeholder","formattedCardNumber","replace","slice","newFormattedCardNumber","i","formattedMonth","formattedYear","formattedCvc","disabled","App","reportWebVitals","onPerfEntry","Function","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.51a38a75.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/card-logo.9f0cf5fb.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-complete.530df842.svg\";","import React, { useState } from 'react';\r\nimport './CardForm.css';\r\nimport cardImage from './images/card-logo.svg';\r\nimport check from './images/icon-complete.svg';\r\n\r\nfunction CardForm() {\r\n  const [name, setName] = useState('');\r\n  const [cardNumber, setCardNumber] = useState('');\r\n  const [month, setMonth] = useState('');\r\n  const [year, setYear] = useState('');\r\n  const [cvc, setCvc] = useState('');\r\n  const [errors, setErrors] = useState({});\r\n  const [success, setSuccess] = useState(false);\r\n  const [isFormSubmitted, setIsFormSubmitted] = useState(false);\r\n\r\n  const handleNameChange = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const handleCardNumberChange = (e) => {\r\n    let formattedCardNumber = e.target.value.replace(/\\D/g, '').slice(0, 16); // Remove existing spaces\r\n    let newFormattedCardNumber = '';\r\n\r\n    for (let i = 0; i < formattedCardNumber.length; i++) {\r\n      if (i > 0 && i % 4 === 0) {\r\n        newFormattedCardNumber += ' '; // Add space after every four digits\r\n      }\r\n      newFormattedCardNumber += formattedCardNumber[i];\r\n    }\r\n\r\n    setCardNumber(newFormattedCardNumber);\r\n  };\r\n\r\n  const handleMonthChange = (e) => {\r\n    let formattedMonth = e.target.value.replace(/\\D/g, '').slice(0, 2); // Remove non-digits and limit to 2 digits\r\n    setMonth(formattedMonth);\r\n  };\r\n\r\n  const handleYearChange = (e) => {\r\n    let formattedYear = e.target.value.replace(/\\D/g, '').slice(0, 2); // Remove non-digits and limit to 2 digits\r\n    setYear(formattedYear);\r\n  };\r\n\r\n  const handleCvcChange = (e) => {\r\n    let formattedCvc = e.target.value.replace(/\\D/g, '').slice(0, 3); // Remove non-digits and limit to 2 digits\r\n    setCvc(formattedCvc);\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n\r\n    if (name.trim() === '') {\r\n      newErrors.name = 'Name cannot be blank';\r\n\r\n    }\r\n\r\n    if(cardNumber.trim() === '') {\r\n      newErrors.cardNumber = 'Card number cannot be blank';\r\n    }\r\n\r\n    const expiryPattern = /^\\d{2}$/;\r\n    if (!expiryPattern.test(month) || !expiryPattern.test(year)) {\r\n      newErrors.expiry = 'Invalid expiry date';\r\n    } else {\r\n      const currentMonth = new Date().getMonth() + 1; // Get current month (1-12)\r\n      const currentYear = new Date().getFullYear() % 100; // Get current year (last two digits)\r\n\r\n      const enteredMonth = parseInt(month, 10);\r\n      const enteredYear = parseInt(year, 10);\r\n\r\n      if (enteredMonth < 1 || enteredMonth > 12) {\r\n        newErrors.expiry = 'Invalid month';\r\n      } else if (\r\n        enteredYear < currentYear ||\r\n        (enteredYear === currentYear && enteredMonth < currentMonth)\r\n      ) {\r\n        newErrors.expiry = 'Invalid expiry date';\r\n      }\r\n    }\r\n\r\n    const cvcPattern = /^\\d{3}$/;\r\n    if (!cvcPattern.test(cvc)) {\r\n      newErrors.cvc = 'Invalid CVC format';\r\n    }\r\n\r\n    setErrors(newErrors);\r\n\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const isValid = validateForm();\r\n\r\n    if (isValid) {\r\n      setIsFormSubmitted(true);\r\n\r\n      setTimeout(() => {\r\n        setSuccess(true);\r\n        setErrors({});\r\n        setIsFormSubmitted(false);\r\n        // Perform form submission logic\r\n        // Reset the form or show success message\r\n      }, 500);\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className={`side1 ${success ? 'success' : ''}`}>\r\n        <div className=\"frontCard\">\r\n          <img src={cardImage} alt=\"Card logo\" />\r\n          <h1 className={`cardNumber ${errors.cardNumber ? 'error' : ''}`}>\r\n            {cardNumber || '0000 0000 0000 0000'}\r\n          </h1>\r\n          <div>\r\n            <p className={`cardholderName ${errors.name ? 'error' : ''}`}>\r\n              {name || 'Jane Appleseed'}\r\n            </p>\r\n            <p className={`monthYear ${errors.expiry ? 'error' : ''}`}>\r\n              {`${month || 'MM'}/${year || 'YY'}`}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"backCard\">\r\n          <p className={`cvcNumber ${errors.cvc ? 'error' : ''}`}>\r\n            {cvc || '000'}\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={`side2 ${success ? 'success' : ''}`}>\r\n        {!success ? (\r\n          <form onSubmit={handleSubmit}>\r\n            <div>\r\n              <label htmlFor=\"cardholder-name\">Cardholder Name</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"cardholder-name\"\r\n                value={name}\r\n                onChange={handleNameChange}\r\n                className={errors.name ? 'error' : ''}\r\n                placeholder=\"e.g. Jane Appleseed\"\r\n              />\r\n              {errors.name && <p className=\"error-message\">{errors.name}</p>}\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"card-number\">Card Number</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"card-number\"\r\n                value={cardNumber}\r\n                onChange={handleCardNumberChange}\r\n                className={errors.cardNumber ? 'error' : ''}\r\n                placeholder=\"e.g. 1234 5678 9123 0000\"\r\n              />\r\n\r\n              {errors.cardNumber && (\r\n                <p className=\"error-message\">{errors.cardNumber}</p>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"lastRow\">\r\n              <div id=\"date\">\r\n                <label htmlFor=\"expiry-date\">Exp. Date (MM/YY)</label>\r\n                <div className=\"expiryDate\">\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"expiry-date\"\r\n                    value={month}\r\n                    onChange={handleMonthChange}\r\n                    className={errors.expiry ? 'error' : ''}\r\n                    placeholder=\"MM\"\r\n                  />\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"expiry-date\"\r\n                    value={year}\r\n                    onChange={handleYearChange}\r\n                    className={errors.expiry ? 'error' : ''}\r\n                    placeholder=\"YY\"\r\n                  />\r\n                </div>\r\n                {errors.expiry && (\r\n                  <p className=\"error-message\">{errors.expiry}</p>\r\n                )}\r\n              </div>\r\n              <div className=\"cvc\">\r\n                <label htmlFor=\"cvc\">CVC</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"cvc\"\r\n                  value={cvc}\r\n                  onChange={handleCvcChange}\r\n                  className={errors.cvc ? 'error' : ''}\r\n                  placeholder=\"e.g. 123\"\r\n                />\r\n                {errors.cvc && <p className=\"error-message\">{errors.cvc}</p>}\r\n              </div>\r\n            </div>\r\n\r\n            <button type=\"submit\" disabled={isFormSubmitted}>\r\n              <h4>{isFormSubmitted ? 'Submitting...' : 'Confirm'}</h4>\r\n            </button>\r\n          </form>\r\n        ) : (\r\n          <div className=\"success-message\">\r\n            <img src={check} alt='icon'/>\r\n            <h3>THANK YOU!</h3>\r\n            <p>We've added your card details</p>\r\n            <button onClick={() => window.location.reload()}>Continue</button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardForm;\r\n","import React from 'react';\nimport './App.css';\nimport CardForm from './CardForm';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CardForm/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\nreportWebVitals();\n"],"sourceRoot":""}